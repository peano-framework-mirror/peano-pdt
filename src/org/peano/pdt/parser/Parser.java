/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.peano.pdt.parser;

import org.peano.pdt.lexer.*;
import org.peano.pdt.node.*;
import org.peano.pdt.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    switch(this.action[1])
                    {
                    case 0: /* reduce AAdescription1Description */
		    {
			ArrayList list = new0();
			push(goTo(0), list);
		    }
		    break;
                    case 1: /* reduce AAdescription2Description */
		    {
			ArrayList list = new1();
			push(goTo(0), list);
		    }
		    break;
                    case 2: /* reduce AAdescription3Description */
		    {
			ArrayList list = new2();
			push(goTo(0), list);
		    }
		    break;
                    case 3: /* reduce AAdescription4Description */
		    {
			ArrayList list = new3();
			push(goTo(0), list);
		    }
		    break;
                    case 4: /* reduce AAvertex1Vertex */
		    {
			ArrayList list = new4();
			push(goTo(1), list);
		    }
		    break;
                    case 5: /* reduce AAvertex2Vertex */
		    {
			ArrayList list = new5();
			push(goTo(1), list);
		    }
		    break;
                    case 6: /* reduce AState */
		    {
			ArrayList list = new6();
			push(goTo(2), list);
		    }
		    break;
                    case 7: /* reduce ACell */
		    {
			ArrayList list = new7();
			push(goTo(3), list);
		    }
		    break;
                    case 8: /* reduce ASingleReadScalarDoubleOperationList */
		    {
			ArrayList list = new8();
			push(goTo(4), list);
		    }
		    break;
                    case 9: /* reduce AListReadScalarDoubleOperationList */
		    {
			ArrayList list = new9();
			push(goTo(4), list);
		    }
		    break;
                    case 10: /* reduce ASingleReadVectorDoubleOperationList */
		    {
			ArrayList list = new10();
			push(goTo(4), list);
		    }
		    break;
                    case 11: /* reduce AListReadVectorDoubleOperationList */
		    {
			ArrayList list = new11();
			push(goTo(4), list);
		    }
		    break;
                    case 12: /* reduce ASingleReadTokenVectorTwoPowDDoubleOperationList */
		    {
			ArrayList list = new12();
			push(goTo(4), list);
		    }
		    break;
                    case 13: /* reduce AListReadTokenVectorTwoPowDDoubleOperationList */
		    {
			ArrayList list = new13();
			push(goTo(4), list);
		    }
		    break;
                    case 14: /* reduce ASingleReadStencilDoubleOperationList */
		    {
			ArrayList list = new14();
			push(goTo(4), list);
		    }
		    break;
                    case 15: /* reduce AListReadStencilDoubleOperationList */
		    {
			ArrayList list = new15();
			push(goTo(4), list);
		    }
		    break;
                    case 16: /* reduce ASingleReadIntergridOperatorDoubleOperationList */
		    {
			ArrayList list = new16();
			push(goTo(4), list);
		    }
		    break;
                    case 17: /* reduce AListReadIntergridOperatorDoubleOperationList */
		    {
			ArrayList list = new17();
			push(goTo(4), list);
		    }
		    break;
                    case 18: /* reduce ASingleWriteScalarDoubleOperationList */
		    {
			ArrayList list = new18();
			push(goTo(4), list);
		    }
		    break;
                    case 19: /* reduce AListWriteScalarDoubleOperationList */
		    {
			ArrayList list = new19();
			push(goTo(4), list);
		    }
		    break;
                    case 20: /* reduce ASingleWriteVectorTwoPowDDoubleOperationList */
		    {
			ArrayList list = new20();
			push(goTo(4), list);
		    }
		    break;
                    case 21: /* reduce AListWriteVectorTwoPowDDoubleOperationList */
		    {
			ArrayList list = new21();
			push(goTo(4), list);
		    }
		    break;
                    case 22: /* reduce ASingleWriteVectorDoubleOperationList */
		    {
			ArrayList list = new22();
			push(goTo(4), list);
		    }
		    break;
                    case 23: /* reduce AListWriteVectorDoubleOperationList */
		    {
			ArrayList list = new23();
			push(goTo(4), list);
		    }
		    break;
                    case 24: /* reduce ASingleWriteStencilDoubleOperationList */
		    {
			ArrayList list = new24();
			push(goTo(4), list);
		    }
		    break;
                    case 25: /* reduce AListWriteStencilDoubleOperationList */
		    {
			ArrayList list = new25();
			push(goTo(4), list);
		    }
		    break;
                    case 26: /* reduce ASingleWriteIntergridOperatorDoubleOperationList */
		    {
			ArrayList list = new26();
			push(goTo(4), list);
		    }
		    break;
                    case 27: /* reduce AListWriteIntergridOperatorDoubleOperationList */
		    {
			ArrayList list = new27();
			push(goTo(4), list);
		    }
		    break;
                    case 28: /* reduce ASingleReadScalarIntOperationList */
		    {
			ArrayList list = new28();
			push(goTo(4), list);
		    }
		    break;
                    case 29: /* reduce AListReadScalarIntOperationList */
		    {
			ArrayList list = new29();
			push(goTo(4), list);
		    }
		    break;
                    case 30: /* reduce ASingleReadVectorIntOperationList */
		    {
			ArrayList list = new30();
			push(goTo(4), list);
		    }
		    break;
                    case 31: /* reduce AListReadVectorIntOperationList */
		    {
			ArrayList list = new31();
			push(goTo(4), list);
		    }
		    break;
                    case 32: /* reduce ASingleReadTokenVectorTwoPowDIntOperationList */
		    {
			ArrayList list = new32();
			push(goTo(4), list);
		    }
		    break;
                    case 33: /* reduce AListReadTokenVectorTwoPowDIntOperationList */
		    {
			ArrayList list = new33();
			push(goTo(4), list);
		    }
		    break;
                    case 34: /* reduce ASingleReadStencilIntOperationList */
		    {
			ArrayList list = new34();
			push(goTo(4), list);
		    }
		    break;
                    case 35: /* reduce AListReadStencilIntOperationList */
		    {
			ArrayList list = new35();
			push(goTo(4), list);
		    }
		    break;
                    case 36: /* reduce ASingleReadIntergridOperatorIntOperationList */
		    {
			ArrayList list = new36();
			push(goTo(4), list);
		    }
		    break;
                    case 37: /* reduce AListReadIntergridOperatorIntOperationList */
		    {
			ArrayList list = new37();
			push(goTo(4), list);
		    }
		    break;
                    case 38: /* reduce ASingleWriteScalarIntOperationList */
		    {
			ArrayList list = new38();
			push(goTo(4), list);
		    }
		    break;
                    case 39: /* reduce AListWriteScalarIntOperationList */
		    {
			ArrayList list = new39();
			push(goTo(4), list);
		    }
		    break;
                    case 40: /* reduce ASingleWriteVectorTwoPowDIntOperationList */
		    {
			ArrayList list = new40();
			push(goTo(4), list);
		    }
		    break;
                    case 41: /* reduce AListWriteVectorTwoPowDIntOperationList */
		    {
			ArrayList list = new41();
			push(goTo(4), list);
		    }
		    break;
                    case 42: /* reduce ASingleWriteVectorIntOperationList */
		    {
			ArrayList list = new42();
			push(goTo(4), list);
		    }
		    break;
                    case 43: /* reduce AListWriteVectorIntOperationList */
		    {
			ArrayList list = new43();
			push(goTo(4), list);
		    }
		    break;
                    case 44: /* reduce ASingleWriteStencilIntOperationList */
		    {
			ArrayList list = new44();
			push(goTo(4), list);
		    }
		    break;
                    case 45: /* reduce AListWriteStencilIntOperationList */
		    {
			ArrayList list = new45();
			push(goTo(4), list);
		    }
		    break;
                    case 46: /* reduce ASingleWriteIntergridOperatorIntOperationList */
		    {
			ArrayList list = new46();
			push(goTo(4), list);
		    }
		    break;
                    case 47: /* reduce AListWriteIntergridOperatorIntOperationList */
		    {
			ArrayList list = new47();
			push(goTo(4), list);
		    }
		    break;
                    case 48: /* reduce ASingleReadScalarComplexOperationList */
		    {
			ArrayList list = new48();
			push(goTo(4), list);
		    }
		    break;
                    case 49: /* reduce AListReadScalarComplexOperationList */
		    {
			ArrayList list = new49();
			push(goTo(4), list);
		    }
		    break;
                    case 50: /* reduce ASingleReadVectorComplexOperationList */
		    {
			ArrayList list = new50();
			push(goTo(4), list);
		    }
		    break;
                    case 51: /* reduce AListReadVectorComplexOperationList */
		    {
			ArrayList list = new51();
			push(goTo(4), list);
		    }
		    break;
                    case 52: /* reduce ASingleReadTokenVectorTwoPowDComplexOperationList */
		    {
			ArrayList list = new52();
			push(goTo(4), list);
		    }
		    break;
                    case 53: /* reduce AListReadTokenVectorTwoPowDComplexOperationList */
		    {
			ArrayList list = new53();
			push(goTo(4), list);
		    }
		    break;
                    case 54: /* reduce ASingleReadStencilComplexOperationList */
		    {
			ArrayList list = new54();
			push(goTo(4), list);
		    }
		    break;
                    case 55: /* reduce AListReadStencilComplexOperationList */
		    {
			ArrayList list = new55();
			push(goTo(4), list);
		    }
		    break;
                    case 56: /* reduce ASingleReadIntergridOperatorComplexOperationList */
		    {
			ArrayList list = new56();
			push(goTo(4), list);
		    }
		    break;
                    case 57: /* reduce AListReadIntergridOperatorComplexOperationList */
		    {
			ArrayList list = new57();
			push(goTo(4), list);
		    }
		    break;
                    case 58: /* reduce ASingleWriteScalarComplexOperationList */
		    {
			ArrayList list = new58();
			push(goTo(4), list);
		    }
		    break;
                    case 59: /* reduce AListWriteScalarComplexOperationList */
		    {
			ArrayList list = new59();
			push(goTo(4), list);
		    }
		    break;
                    case 60: /* reduce ASingleWriteVectorTwoPowDComplexOperationList */
		    {
			ArrayList list = new60();
			push(goTo(4), list);
		    }
		    break;
                    case 61: /* reduce AListWriteVectorTwoPowDComplexOperationList */
		    {
			ArrayList list = new61();
			push(goTo(4), list);
		    }
		    break;
                    case 62: /* reduce ASingleWriteVectorComplexOperationList */
		    {
			ArrayList list = new62();
			push(goTo(4), list);
		    }
		    break;
                    case 63: /* reduce AListWriteVectorComplexOperationList */
		    {
			ArrayList list = new63();
			push(goTo(4), list);
		    }
		    break;
                    case 64: /* reduce ASingleWriteStencilComplexOperationList */
		    {
			ArrayList list = new64();
			push(goTo(4), list);
		    }
		    break;
                    case 65: /* reduce AListWriteStencilComplexOperationList */
		    {
			ArrayList list = new65();
			push(goTo(4), list);
		    }
		    break;
                    case 66: /* reduce ASingleWriteIntergridOperatorComplexOperationList */
		    {
			ArrayList list = new66();
			push(goTo(4), list);
		    }
		    break;
                    case 67: /* reduce AListWriteIntergridOperatorComplexOperationList */
		    {
			ArrayList list = new67();
			push(goTo(4), list);
		    }
		    break;
                    case 68: /* reduce ASingleEventMappingList */
		    {
			ArrayList list = new68();
			push(goTo(5), list);
		    }
		    break;
                    case 69: /* reduce AListEventMappingList */
		    {
			ArrayList list = new69();
			push(goTo(5), list);
		    }
		    break;
                    case 70: /* reduce AAsingleadapterlist1AdapterList */
		    {
			ArrayList list = new70();
			push(goTo(6), list);
		    }
		    break;
                    case 71: /* reduce AAsingleadapterlist2AdapterList */
		    {
			ArrayList list = new71();
			push(goTo(6), list);
		    }
		    break;
                    case 72: /* reduce AAsingleadapterlist3AdapterList */
		    {
			ArrayList list = new72();
			push(goTo(6), list);
		    }
		    break;
                    case 73: /* reduce AAsingleadapterlist4AdapterList */
		    {
			ArrayList list = new73();
			push(goTo(6), list);
		    }
		    break;
                    case 74: /* reduce AAlistadapterlist1AdapterList */
		    {
			ArrayList list = new74();
			push(goTo(6), list);
		    }
		    break;
                    case 75: /* reduce AAlistadapterlist2AdapterList */
		    {
			ArrayList list = new75();
			push(goTo(6), list);
		    }
		    break;
                    case 76: /* reduce AAlistadapterlist3AdapterList */
		    {
			ArrayList list = new76();
			push(goTo(6), list);
		    }
		    break;
                    case 77: /* reduce AAlistadapterlist4AdapterList */
		    {
			ArrayList list = new77();
			push(goTo(6), list);
		    }
		    break;
                    case 78: /* reduce ASingleMergeWithUserDefinedAdapterList */
		    {
			ArrayList list = new78();
			push(goTo(7), list);
		    }
		    break;
                    case 79: /* reduce AListMergeWithUserDefinedAdapterList */
		    {
			ArrayList list = new79();
			push(goTo(7), list);
		    }
		    break;
                    case 80: /* reduce ASingleWithParameterMergeWithPredefinedAdapterList */
		    {
			ArrayList list = new80();
			push(goTo(8), list);
		    }
		    break;
                    case 81: /* reduce AListWithParameterMergeWithPredefinedAdapterList */
		    {
			ArrayList list = new81();
			push(goTo(8), list);
		    }
		    break;
                    case 82: /* reduce ASingleWithoutParameterMergeWithPredefinedAdapterList */
		    {
			ArrayList list = new82();
			push(goTo(8), list);
		    }
		    break;
                    case 83: /* reduce AListWithoutParameterMergeWithPredefinedAdapterList */
		    {
			ArrayList list = new83();
			push(goTo(8), list);
		    }
		    break;
                    case 84: /* reduce ASinglePredefinedAdapterParameterList */
		    {
			ArrayList list = new84();
			push(goTo(9), list);
		    }
		    break;
                    case 85: /* reduce AListPredefinedAdapterParameterList */
		    {
			ArrayList list = new85();
			push(goTo(9), list);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PDescription node1 = (PDescription) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }



    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AAdescription1Description */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDescription pdescriptionNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TNamespace tnamespaceNode3;
        PVertex pvertexNode4;
        PCell pcellNode5;
        PState pstateNode6;
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        tnamespaceNode3 = (TNamespace)nodeArrayList4.get(0);
        pvertexNode4 = (PVertex)nodeArrayList5.get(0);
        pcellNode5 = (PCell)nodeArrayList6.get(0);
        pstateNode6 = (PState)nodeArrayList7.get(0);
        {
            // Block
        }
        {
            // Block
        }

        pdescriptionNode1 = new ADescription(tidentifierNode2, tnamespaceNode3, pvertexNode4, pcellNode5, pstateNode6, listNode7, listNode8);
        }
	nodeList.add(pdescriptionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce AAdescription2Description */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDescription pdescriptionNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TNamespace tnamespaceNode3;
        PVertex pvertexNode4;
        PCell pcellNode5;
        PState pstateNode6;
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        tnamespaceNode3 = (TNamespace)nodeArrayList4.get(0);
        pvertexNode4 = (PVertex)nodeArrayList5.get(0);
        pcellNode5 = (PCell)nodeArrayList6.get(0);
        pstateNode6 = (PState)nodeArrayList7.get(0);
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList8.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        }

        pdescriptionNode1 = new ADescription(tidentifierNode2, tnamespaceNode3, pvertexNode4, pcellNode5, pstateNode6, listNode8, listNode9);
        }
	nodeList.add(pdescriptionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce AAdescription3Description */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDescription pdescriptionNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TNamespace tnamespaceNode3;
        PVertex pvertexNode4;
        PCell pcellNode5;
        PState pstateNode6;
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        tnamespaceNode3 = (TNamespace)nodeArrayList4.get(0);
        pvertexNode4 = (PVertex)nodeArrayList5.get(0);
        pcellNode5 = (PCell)nodeArrayList6.get(0);
        pstateNode6 = (PState)nodeArrayList7.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList8.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pdescriptionNode1 = new ADescription(tidentifierNode2, tnamespaceNode3, pvertexNode4, pcellNode5, pstateNode6, listNode7, listNode9);
        }
	nodeList.add(pdescriptionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce AAdescription4Description */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDescription pdescriptionNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TNamespace tnamespaceNode3;
        PVertex pvertexNode4;
        PCell pcellNode5;
        PState pstateNode6;
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        tnamespaceNode3 = (TNamespace)nodeArrayList4.get(0);
        pvertexNode4 = (PVertex)nodeArrayList5.get(0);
        pcellNode5 = (PCell)nodeArrayList6.get(0);
        pstateNode6 = (PState)nodeArrayList7.get(0);
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList8.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList9.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        pdescriptionNode1 = new ADescription(tidentifierNode2, tnamespaceNode3, pvertexNode4, pcellNode5, pstateNode6, listNode8, listNode10);
        }
	nodeList.add(pdescriptionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce AAvertex1Vertex */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PVertex pvertexNode1;
        {
            // Block
        TFilename tfilenameNode2;
        LinkedList listNode3 = new LinkedList();
        tfilenameNode2 = (TFilename)nodeArrayList3.get(0);
        {
            // Block
        }

        pvertexNode1 = new AVertex(tfilenameNode2, listNode3);
        }
	nodeList.add(pvertexNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce AAvertex2Vertex */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PVertex pvertexNode1;
        {
            // Block
        TFilename tfilenameNode2;
        LinkedList listNode4 = new LinkedList();
        tfilenameNode2 = (TFilename)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pvertexNode1 = new AVertex(tfilenameNode2, listNode4);
        }
	nodeList.add(pvertexNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce AState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PState pstateNode1;
        {
            // Block
        TFilename tfilenameNode2;
        tfilenameNode2 = (TFilename)nodeArrayList3.get(0);

        pstateNode1 = new AState(tfilenameNode2);
        }
	nodeList.add(pstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce ACell */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCell pcellNode1;
        {
            // Block
        TFilename tfilenameNode2;
        tfilenameNode2 = (TFilename)nodeArrayList3.get(0);

        pcellNode1 = new ACell(tfilenameNode2);
        }
	nodeList.add(pcellNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce ASingleReadScalarDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadScalarDoubleOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce AListReadScalarDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadScalarDoubleOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce ASingleReadVectorDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadVectorDoubleOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce AListReadVectorDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadVectorDoubleOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce ASingleReadTokenVectorTwoPowDDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadVectorTwoPowDDoubleOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce AListReadTokenVectorTwoPowDDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadVectorTwoPowDDoubleOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce ASingleReadStencilDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadStencilDoubleOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce AListReadStencilDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadStencilDoubleOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce ASingleReadIntergridOperatorDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadIntergridOperatorDoubleOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce AListReadIntergridOperatorDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadIntergridOperatorDoubleOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce ASingleWriteScalarDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteScalarDoubleOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce AListWriteScalarDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteScalarDoubleOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce ASingleWriteVectorTwoPowDDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteVectorTwoPowDDoubleOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce AListWriteVectorTwoPowDDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteVectorTwoPowDDoubleOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce ASingleWriteVectorDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteVectorDoubleOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce AListWriteVectorDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteVectorDoubleOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce ASingleWriteStencilDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteStencilDoubleOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce AListWriteStencilDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteStencilDoubleOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce ASingleWriteIntergridOperatorDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteIntergridOperatorDoubleOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce AListWriteIntergridOperatorDoubleOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteIntergridOperatorDoubleOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce ASingleReadScalarIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadScalarIntOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce AListReadScalarIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadScalarIntOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new30() /* reduce ASingleReadVectorIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadVectorIntOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new31() /* reduce AListReadVectorIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadVectorIntOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new32() /* reduce ASingleReadTokenVectorTwoPowDIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadVectorTwoPowDIntOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new33() /* reduce AListReadTokenVectorTwoPowDIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadVectorTwoPowDIntOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new34() /* reduce ASingleReadStencilIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadStencilIntOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new35() /* reduce AListReadStencilIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadStencilIntOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new36() /* reduce ASingleReadIntergridOperatorIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadIntergridOperatorIntOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new37() /* reduce AListReadIntergridOperatorIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadIntergridOperatorIntOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new38() /* reduce ASingleWriteScalarIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteScalarIntOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new39() /* reduce AListWriteScalarIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteScalarIntOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new40() /* reduce ASingleWriteVectorTwoPowDIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteVectorTwoPowDIntOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new41() /* reduce AListWriteVectorTwoPowDIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteVectorTwoPowDIntOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new42() /* reduce ASingleWriteVectorIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteVectorIntOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new43() /* reduce AListWriteVectorIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteVectorIntOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new44() /* reduce ASingleWriteStencilIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteStencilIntOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new45() /* reduce AListWriteStencilIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteStencilIntOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new46() /* reduce ASingleWriteIntergridOperatorIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteIntergridOperatorIntOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new47() /* reduce AListWriteIntergridOperatorIntOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteIntergridOperatorIntOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new48() /* reduce ASingleReadScalarComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadScalarComplexOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new49() /* reduce AListReadScalarComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadScalarComplexOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new50() /* reduce ASingleReadVectorComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadVectorComplexOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new51() /* reduce AListReadVectorComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadVectorComplexOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new52() /* reduce ASingleReadTokenVectorTwoPowDComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadVectorTwoPowDComplexOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new53() /* reduce AListReadTokenVectorTwoPowDComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadVectorTwoPowDComplexOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new54() /* reduce ASingleReadStencilComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadStencilComplexOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new55() /* reduce AListReadStencilComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadStencilComplexOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new56() /* reduce ASingleReadIntergridOperatorComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadIntergridOperatorComplexOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new57() /* reduce AListReadIntergridOperatorComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AReadIntergridOperatorComplexOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new58() /* reduce ASingleWriteScalarComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteScalarComplexOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new59() /* reduce AListWriteScalarComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteScalarComplexOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new60() /* reduce ASingleWriteVectorTwoPowDComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteVectorTwoPowDComplexOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new61() /* reduce AListWriteVectorTwoPowDComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteVectorTwoPowDComplexOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new62() /* reduce ASingleWriteVectorComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteVectorComplexOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new63() /* reduce AListWriteVectorComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteVectorComplexOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new64() /* reduce ASingleWriteStencilComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteStencilComplexOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new65() /* reduce AListWriteStencilComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteStencilComplexOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new66() /* reduce ASingleWriteIntergridOperatorComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteIntergridOperatorComplexOperation(tidentifierNode2);
        }
	if(poperationNode1 != null)
	{
	  listNode3.add(poperationNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new67() /* reduce AListWriteIntergridOperatorComplexOperationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        POperation poperationNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        poperationNode1 = new AWriteIntergridOperatorComplexOperation(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(poperationNode1 != null)
	{
	  listNode4.add(poperationNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new68() /* reduce ASingleEventMappingList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PEventMapping peventmappingNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        peventmappingNode1 = new AEventMapping(tidentifierNode2);
        }
	if(peventmappingNode1 != null)
	{
	  listNode3.add(peventmappingNode1);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new69() /* reduce AListEventMappingList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        PEventMapping peventmappingNode1;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);

        peventmappingNode1 = new AEventMapping(tidentifierNode2);
        }
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(peventmappingNode1 != null)
	{
	  listNode4.add(peventmappingNode1);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new70() /* reduce AAsingleadapterlist1AdapterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        PAdapter padapterNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        }

        padapterNode1 = new AAdapter(tidentifierNode2, listNode3, listNode4);
        }
	if(padapterNode1 != null)
	{
	  listNode5.add(padapterNode1);
	}
        }
	nodeList.add(listNode5);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new71() /* reduce AAsingleadapterlist2AdapterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode6 = new LinkedList();
        {
            // Block
        PAdapter padapterNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }

        padapterNode1 = new AAdapter(tidentifierNode2, listNode4, listNode5);
        }
	if(padapterNode1 != null)
	{
	  listNode6.add(padapterNode1);
	}
        }
	nodeList.add(listNode6);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new72() /* reduce AAsingleadapterlist3AdapterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode6 = new LinkedList();
        {
            // Block
        PAdapter padapterNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        padapterNode1 = new AAdapter(tidentifierNode2, listNode3, listNode5);
        }
	if(padapterNode1 != null)
	{
	  listNode6.add(padapterNode1);
	}
        }
	nodeList.add(listNode6);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new73() /* reduce AAsingleadapterlist4AdapterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode7 = new LinkedList();
        {
            // Block
        PAdapter padapterNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList5.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        padapterNode1 = new AAdapter(tidentifierNode2, listNode4, listNode6);
        }
	if(padapterNode1 != null)
	{
	  listNode7.add(padapterNode1);
	}
        }
	nodeList.add(listNode7);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new74() /* reduce AAlistadapterlist1AdapterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode6 = new LinkedList();
        {
            // Block
        PAdapter padapterNode1;
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        }

        padapterNode1 = new AAdapter(tidentifierNode2, listNode3, listNode4);
        }
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(padapterNode1 != null)
	{
	  listNode6.add(padapterNode1);
	}
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
	nodeList.add(listNode6);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new75() /* reduce AAlistadapterlist2AdapterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode7 = new LinkedList();
        {
            // Block
        PAdapter padapterNode1;
        LinkedList listNode6 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }

        padapterNode1 = new AAdapter(tidentifierNode2, listNode4, listNode5);
        }
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(padapterNode1 != null)
	{
	  listNode7.add(padapterNode1);
	}
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
	nodeList.add(listNode7);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new76() /* reduce AAlistadapterlist3AdapterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode7 = new LinkedList();
        {
            // Block
        PAdapter padapterNode1;
        LinkedList listNode6 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        padapterNode1 = new AAdapter(tidentifierNode2, listNode3, listNode5);
        }
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(padapterNode1 != null)
	{
	  listNode7.add(padapterNode1);
	}
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
	nodeList.add(listNode7);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new77() /* reduce AAlistadapterlist4AdapterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        PAdapter padapterNode1;
        LinkedList listNode7 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList5.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        padapterNode1 = new AAdapter(tidentifierNode2, listNode4, listNode6);
        }
        listNode7 = (LinkedList)nodeArrayList6.get(0);
	if(padapterNode1 != null)
	{
	  listNode8.add(padapterNode1);
	}
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
	nodeList.add(listNode8);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new78() /* reduce ASingleMergeWithUserDefinedAdapterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList2.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode2.add(tidentifierNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new79() /* reduce AListMergeWithUserDefinedAdapterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        LinkedList listNode2 = new LinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList2.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode3.add(tidentifierNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new80() /* reduce ASingleWithParameterMergeWithPredefinedAdapterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        PPredefinedAdapter ppredefinedadapterNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode4 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        ppredefinedadapterNode1 = new APredefinedAdapter(tidentifierNode2, listNode4);
        }
	if(ppredefinedadapterNode1 != null)
	{
	  listNode5.add(ppredefinedadapterNode1);
	}
        }
	nodeList.add(listNode5);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new81() /* reduce AListWithParameterMergeWithPredefinedAdapterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode6 = new LinkedList();
        {
            // Block
        PPredefinedAdapter ppredefinedadapterNode1;
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode4 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        ppredefinedadapterNode1 = new APredefinedAdapter(tidentifierNode2, listNode4);
        }
        listNode5 = (LinkedList)nodeArrayList6.get(0);
	if(ppredefinedadapterNode1 != null)
	{
	  listNode6.add(ppredefinedadapterNode1);
	}
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
	nodeList.add(listNode6);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new82() /* reduce ASingleWithoutParameterMergeWithPredefinedAdapterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        PPredefinedAdapter ppredefinedadapterNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode3 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        {
            // Block
        }

        ppredefinedadapterNode1 = new APredefinedAdapter(tidentifierNode2, listNode3);
        }
	if(ppredefinedadapterNode1 != null)
	{
	  listNode4.add(ppredefinedadapterNode1);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new83() /* reduce AListWithoutParameterMergeWithPredefinedAdapterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        PPredefinedAdapter ppredefinedadapterNode1;
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode3 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        {
            // Block
        }

        ppredefinedadapterNode1 = new APredefinedAdapter(tidentifierNode2, listNode3);
        }
        listNode4 = (LinkedList)nodeArrayList5.get(0);
	if(ppredefinedadapterNode1 != null)
	{
	  listNode5.add(ppredefinedadapterNode1);
	}
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
	nodeList.add(listNode5);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new84() /* reduce ASinglePredefinedAdapterParameterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode2.add(tidentifierNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new85() /* reduce AListPredefinedAdapterParameterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        LinkedList listNode2 = new LinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode3.add(tidentifierNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {3, SHIFT, 1}, },
			{{-1, ERROR, 1}, {31, SHIFT, 3}, },
			{{-1, ERROR, 2}, {34, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {4, SHIFT, 4}, },
			{{-1, ERROR, 4}, {33, SHIFT, 5}, },
			{{-1, ERROR, 5}, {0, SHIFT, 6}, },
			{{-1, ERROR, 6}, {23, SHIFT, 8}, },
			{{-1, ERROR, 7}, {1, SHIFT, 9}, },
			{{-1, ERROR, 8}, {32, SHIFT, 11}, },
			{{-1, ERROR, 9}, {23, SHIFT, 12}, },
			{{-1, ERROR, 10}, {2, SHIFT, 13}, },
			{{-1, REDUCE, 4}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, ERROR, 12}, {32, SHIFT, 18}, },
			{{-1, ERROR, 13}, {23, SHIFT, 19}, },
			{{-1, REDUCE, 0}, {24, SHIFT, 20}, {28, SHIFT, 21}, },
			{{-1, ERROR, 15}, {7, SHIFT, 24}, {8, SHIFT, 25}, {9, SHIFT, 26}, {10, SHIFT, 27}, {11, SHIFT, 28}, {12, SHIFT, 29}, {13, SHIFT, 30}, {14, SHIFT, 31}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {20, SHIFT, 37}, {21, SHIFT, 38}, },
			{{-1, ERROR, 16}, {7, SHIFT, 39}, {8, SHIFT, 40}, {9, SHIFT, 41}, {10, SHIFT, 42}, {11, SHIFT, 43}, {12, SHIFT, 44}, {13, SHIFT, 45}, {14, SHIFT, 46}, {15, SHIFT, 47}, {16, SHIFT, 48}, {17, SHIFT, 49}, {18, SHIFT, 50}, {19, SHIFT, 51}, {20, SHIFT, 52}, {21, SHIFT, 53}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 19}, {32, SHIFT, 54}, },
			{{-1, ERROR, 20}, {22, SHIFT, 55}, },
			{{-1, ERROR, 21}, {22, SHIFT, 56}, },
			{{-1, REDUCE, 1}, {28, SHIFT, 21}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 24}, {31, SHIFT, 58}, },
			{{-1, ERROR, 25}, {31, SHIFT, 59}, },
			{{-1, ERROR, 26}, {31, SHIFT, 60}, },
			{{-1, ERROR, 27}, {31, SHIFT, 61}, },
			{{-1, ERROR, 28}, {31, SHIFT, 62}, },
			{{-1, ERROR, 29}, {31, SHIFT, 63}, },
			{{-1, ERROR, 30}, {31, SHIFT, 64}, },
			{{-1, ERROR, 31}, {31, SHIFT, 65}, },
			{{-1, ERROR, 32}, {31, SHIFT, 66}, },
			{{-1, ERROR, 33}, {31, SHIFT, 67}, },
			{{-1, ERROR, 34}, {31, SHIFT, 68}, },
			{{-1, ERROR, 35}, {31, SHIFT, 69}, },
			{{-1, ERROR, 36}, {31, SHIFT, 70}, },
			{{-1, ERROR, 37}, {31, SHIFT, 71}, },
			{{-1, ERROR, 38}, {31, SHIFT, 72}, },
			{{-1, ERROR, 39}, {31, SHIFT, 73}, },
			{{-1, ERROR, 40}, {31, SHIFT, 74}, },
			{{-1, ERROR, 41}, {31, SHIFT, 75}, },
			{{-1, ERROR, 42}, {31, SHIFT, 76}, },
			{{-1, ERROR, 43}, {31, SHIFT, 77}, },
			{{-1, ERROR, 44}, {31, SHIFT, 78}, },
			{{-1, ERROR, 45}, {31, SHIFT, 79}, },
			{{-1, ERROR, 46}, {31, SHIFT, 80}, },
			{{-1, ERROR, 47}, {31, SHIFT, 81}, },
			{{-1, ERROR, 48}, {31, SHIFT, 82}, },
			{{-1, ERROR, 49}, {31, SHIFT, 83}, },
			{{-1, ERROR, 50}, {31, SHIFT, 84}, },
			{{-1, ERROR, 51}, {31, SHIFT, 85}, },
			{{-1, ERROR, 52}, {31, SHIFT, 86}, },
			{{-1, ERROR, 53}, {31, SHIFT, 87}, },
			{{-1, REDUCE, 6}, },
			{{-1, ERROR, 55}, {31, SHIFT, 88}, },
			{{-1, ERROR, 56}, {31, SHIFT, 89}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 8}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 28}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 48}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 10}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 30}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 50}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 12}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 32}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 52}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 16}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 36}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 56}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 14}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 34}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 54}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 18}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 38}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 58}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 22}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 42}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 62}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 20}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 40}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 60}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 26}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 46}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 66}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 24}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 44}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 64}, {5, SHIFT, 15}, {6, SHIFT, 16}, },
			{{-1, REDUCE, 68}, {24, SHIFT, 20}, },
			{{-1, REDUCE, 70}, {28, SHIFT, 21}, {29, SHIFT, 121}, {30, SHIFT, 122}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 57}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 69}, },
			{{-1, ERROR, 121}, {31, SHIFT, 126}, },
			{{-1, ERROR, 122}, {31, SHIFT, 127}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 71}, {28, SHIFT, 21}, {30, SHIFT, 122}, },
			{{-1, REDUCE, 72}, {28, SHIFT, 21}, },
			{{-1, REDUCE, 78}, {29, SHIFT, 121}, },
			{{-1, ERROR, 127}, {25, SHIFT, 132}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 73}, {28, SHIFT, 21}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 79}, },
			{{-1, ERROR, 132}, {26, SHIFT, 134}, {31, SHIFT, 135}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 82}, {30, SHIFT, 122}, },
			{{-1, REDUCE, 84}, {27, SHIFT, 138}, },
			{{-1, ERROR, 136}, {26, SHIFT, 139}, },
			{{-1, REDUCE, 83}, },
			{{-1, ERROR, 138}, {31, SHIFT, 135}, },
			{{-1, REDUCE, 80}, {30, SHIFT, 122}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 81}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 7}, },
			{{-1, 14}, },
			{{-1, 10}, },
			{{-1, 17}, {58, 90}, {59, 91}, {60, 92}, {61, 93}, {62, 94}, {63, 95}, {64, 96}, {65, 97}, {66, 98}, {67, 99}, {68, 100}, {69, 101}, {70, 102}, {71, 103}, {72, 104}, {73, 105}, {74, 106}, {75, 107}, {76, 108}, {77, 109}, {78, 110}, {79, 111}, {80, 112}, {81, 113}, {82, 114}, {83, 115}, {84, 116}, {85, 117}, {86, 118}, {87, 119}, },
			{{-1, 22}, {88, 120}, },
			{{-1, 23}, {22, 57}, {89, 123}, {124, 128}, {125, 130}, {129, 133}, },
			{{-1, 124}, {126, 131}, },
			{{-1, 125}, {124, 129}, {134, 137}, {139, 141}, },
			{{-1, 136}, {138, 140}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'component:'",
			"expecting: identifier",
			"expecting: EOF",
			"expecting: 'namespace:'",
			"expecting: namespace",
			"expecting: 'vertex:'",
			"expecting: 'dastgen-file:'",
			"expecting: 'cell:'",
			"expecting: filename",
			"expecting: 'state:'",
			"expecting: 'cell:', 'read', 'write'",
			"expecting: 'event-mapping:', 'adapter:', EOF",
			"expecting: 'scalar(double):', 'scalar(int):', 'scalar(complex):', 'vector(double):', 'vector(int):', 'vector(complex):', 'vector2PowD(double):', 'vector2PowD(int):', 'vector2PowD(complex):', 'intergrid-operator(double):', 'intergrid-operator(int):', 'intergrid-operator(complex):', 'stencil(double):', 'stencil(int):', 'stencil(complex):'",
			"expecting: 'name:'",
			"expecting: 'adapter:', EOF",
			"expecting: 'adapter:', 'merge-with-user-defined-mapping:', 'merge-with-predefined-mapping:', EOF",
			"expecting: 'adapter:', 'merge-with-predefined-mapping:', EOF",
			"expecting: '('",
			"expecting: ')', identifier",
			"expecting: ')', ','",
			"expecting: ')'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 6, 7, 8, 6, 9, 10, 8, 6, 11, 12, 12, 7, 9, 8, 13, 13, 14, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 1, 1, 2, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 15, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 14, 1, 1, 2, 16, 14, 15, 17, 2, 14, 2, 16, 18, 2, 16, 19, 20, 14, 1, 16, 20, 14, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
